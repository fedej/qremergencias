plugins {
    id 'org.springframework.boot' version '1.5.4.RELEASE'
    id 'java'
}

import ar.com.utn.proyecto.qremergencias.SwaggerCodeGenPlugin
apply plugin: SwaggerCodeGenPlugin

springBoot {
    executable = true
}

bootRepackage {
    mainClass = 'ar.com.utn.proyecto.qremergencias.QREmergenciasWsApplication'
}

def profiles = project.hasProperty('env') ? project.env : "local"
dependencies {
    compile project(':qremergencias-core')

    compile group: 'com.google.zxing', name: 'core', version: '3.3.0'
    compile 'com.google.apis:google-api-services-urlshortener:v1-rev48-1.22.0'

    if (profiles =~ ".*local.*") {
        compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    }

    compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.2.0.RELEASE'

}

swagger {
    inputSpec = projectDir.toPath().resolve('src/main/resources/swagger.json').toFile()
    outputDir = buildDir.toPath().resolve('swagger').toFile()

    if (profiles =~ ".*android.*") {
        lang = 'java'
        additionalProperties = [
                'invokerPackage' : 'com.qre.client',
                'apiPackage'     : 'com.qre.client.api',
                'modelPackage'   : 'com.qre.models',
                'dateLibrary'    : 'threetenbp',
                'supportJava6'   : true,
                'library'        : 'retrofit2',
                'parcelableModel': 'false'
        ]
    } else {
        lang = 'javascript'
        additionalProperties = [
                'useES6': true,
                'usePromises': true
        ]
    }

}

def mainPackage = 'ar/com/utn/proyecto/qremergencias'
def clientPackage = mainPackage + '/client/**'
def modelPackage = mainPackage + '/core/dto/**'
checkstyleMain.exclude clientPackage, modelPackage
pmdMain.exclude clientPackage, modelPackage
